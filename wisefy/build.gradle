apply plugin: 'com.android.library'

android {

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
        javaMaxHeapSize "2g"
    }

    adbOptions {
        timeOutInMs 15 * 60 * 1000  // 15 minutes
        installOptions "-d", "-t"
    }

    lintOptions {
        checkAllWarnings true
        warningsAsErrors true
        showAll true
        explainIssues true
        abortOnError true
//        enable 'AppLinksAutoVerifyError', 'AppLinksAutoVerifyWarning', 'BackButton',
//                'EasterEgg', 'FieldGetter', 'GoogleAppIndexingApiWarning', 'IconExpectedSize',
//                'LogConditional', 'MangledCRLF', 'NegativeMargin', 'NewerVersionAvailable',
//                'SelectableText', 'StopShip', 'TrulyRandom', 'TypographyQuotes', 'UnusedIds'
    }

    compileSdkVersion rootProject.ext.MAX_SDK_VERSION
    buildToolsVersion rootProject.ext.BUILD_TOOLS_VERSION

    defaultConfig {
        minSdkVersion rootProject.ext.MIN_SDK_VERSION
        targetSdkVersion rootProject.ext.MAX_SDK_VERSION
        versionCode rootProject.ext.VERSION_CODE
        versionName rootProject.ext.VERSION_NAME
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
        consumerProguardFiles 'consumer-proguard-rules.pro'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFile file("proguard-test-rules.pro")
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jni.srcDirs = [] //disable automatic ndk-build call
        }

        // This lets us write test utility code that can be used by both unit tests and android tests
        commonTest {
            java
        }

        test {
            java.srcDirs += commonTest.java.srcDirs
        }

        androidTest {
            java.srcDirs += commonTest.java.srcDirs
        }
    }
}

apply from: rootProject.file('wisefy/gradle/dependencies.gradle')

// Static analysis tasks
apply from: rootProject.file('wisefy/gradle/checkstyle.gradle')
apply from: rootProject.file('wisefy/gradle/cpd.gradle')
apply from: rootProject.file('wisefy/gradle/dexcount.gradle')
apply from: rootProject.file('wisefy/gradle/findbugs.gradle')
apply from: rootProject.file('wisefy/gradle/pmd.gradle')

// Verification tasks
apply from: rootProject.file('wisefy/gradle/custom-tasks.gradle')
apply from: rootProject.file('wisefy/gradle/jacoco.gradle')

// Release related gradle tasks
apply from: rootProject.file('gradle/gradle-bintray-install.gradle')
apply from: rootProject.file('gradle/gradle-bintray-upload.gradle')
