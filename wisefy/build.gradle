apply plugin: 'com.android.library'
apply plugin: 'com.getkeepsafe.dexcount'

version = rootProject.ext.VERSION_NAME

dexcount {
    format = "tree"
    includeClasses = true
    includeFieldCount = true
    includeTotalMethodCount = true
    orderByMethodCount = true
    verbose = false
}

android {

    dexOptions {
        // Skip pre-dexing when running on Travis CI or when disabled via -Dpre-dex=false.
        preDexLibraries = preDexEnabled && !travisBuild
    }

    adbOptions {
        timeOutInMs 15 * 60 * 1000  // 15 minutes
        installOptions "-d", "-t"
    }

    compileSdkVersion 27
    buildToolsVersion "27.0.2"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
        versionCode 13
        versionName version
        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            testCoverageEnabled true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFile file("proguard-test-rules.pro")
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jni.srcDirs = [] //disable automatic ndk-build call
        }

        // This lets us write test utility code that can be used by both unit tests and android tests
        commonTest {
            java
        }

        test {
            java.srcDirs += commonTest.java.srcDirs
        }

        androidTest {
            java.srcDirs += commonTest.java.srcDirs
        }
    }
}

apply from: rootProject.file('wisefy/gradle/dependencies.gradle')
apply from: rootProject.file('wisefy/gradle/findbugs.gradle')
apply from: rootProject.file('wisefy/gradle/pmd.gradle')
apply from: rootProject.file('wisefy/gradle/cpd.gradle')
apply from: rootProject.file('wisefy/gradle/checkstyle.gradle')
apply from: rootProject.file('wisefy/gradle/jacoco.gradle')
apply from: rootProject.file('gradle/gradle-bintray-install.gradle')
apply from: rootProject.file('gradle/gradle-bintray-upload.gradle')

task makeGoodChoices {
    group = "verification"

    dependsOn 'androidFindbugs', 'pmd', 'lintDebug', 'cpdCheck', 'checkstyle', 'jacocoDebugTestReport'
    doLast {
        println "\n#############################################" +
                "\n# All checks passed! You are doing so good! #" +
                "\n# You may now push the awesome to origin :) #" +
                "\n#############################################"
    }
}

task staticAnalysisSanityCheck {
    group = "verification"

    dependsOn 'androidFindbugs', 'pmd', 'lintDebug', 'cpdCheck', 'checkstyle'
    doLast {
        println "\n##################################################" +
                "\n# Static analysis passed! You are doing so good! #" +
                "\n##################################################"
    }
}

dependencies {
    implementation 'com.android.support:support-annotations:27.0.2'
}