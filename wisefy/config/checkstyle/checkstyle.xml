<?xml version="1.0"?><!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://checkstyle.sourceforge.net/dtds/configuration_1_3.dtd">

<!--
    Checkstyle configuration that checks the Google coding conventions from Google Java Style
    that can be found at https://google.github.io/styleguide/javaguide.html.
    Checkstyle is very configurable. Be sure to read the documentation at
    http://checkstyle.sf.net (or in your downloaded distribution).
    To completely disable a check, just comment it out or delete it from the file.
    Authors: Max Vetrenko, Ruslan Diachenko, Roman Ivanov.
 --><!--
    Taken and modified from:
        https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml and
        https://github.com/noveogroup/android-check/blob/master/android-check-plugin/src/main/resources/checkstyle/checkstyle-hard.xml
 -->
<module name="Checker">

    <property name="charset" value="UTF-8" />

    <property name="severity" value="warning" />

    <property name="fileExtensions" value="java, properties, xml" />

    <module name="SuppressionFilter">
        <property name="file" value="${suppressionFile}"/>
    </module>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile" />

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html#Translation -->
    <module name="Translation" />

    <!-- Checks for Size Violations.                    -->
    <!-- See http://checkstyle.sourceforge.net/config_sizes.html -->
    <module name="FileLength" />

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sourceforge.net/config_misc.html -->
    <module name="RegexpSingleline">
        <property name="format" value="\s+$" />
        <property name="minimum" value="0" />
        <property name="maximum" value="0" />
        <property name="message" value="Line has trailing spaces." />
        <property name="severity" value="info" />
    </module>

    <!-- Checks for whitespace                               -->
    <!-- See http://checkstyle.sf.net/config_whitespace.html -->
    <module name="FileTabCharacter">
        <property name="eachLine" value="true" />
    </module>

    <module name="TreeWalker">
        <module name="OuterTypeFilename" />
        <module name="IllegalTokenText">
            <property name="tokens" value="STRING_LITERAL, CHAR_LITERAL" />
            <property name="format"
                value="\\u00(09|0(a|A)|0(c|C)|0(d|D)|22|27|5(C|c))|\\(0(10|11|12|14|15|42|47)|134)" />
            <property name="message"
                value="Consider using special escape sequence instead of octal value or Unicode escaped value." />
        </module>
        <module name="AvoidEscapedUnicodeCharacters">
            <property name="allowEscapesForControlCharacters" value="true" />
            <property name="allowByTailComment" value="true" />
            <property name="allowNonPrintableEscapes" value="true" />
        </module>
        <module name="LineLength">
            <!-- Modified -->
            <property name="max" value="150" />
            <property name="ignorePattern"
                value="^package.*|^import.*|a href|href|http://|https://|ftp://" />
        </module>
        <module name="AvoidStarImport" />
        <module name="OneTopLevelClass" />
        <module name="NoLineWrap" />
        <module name="EmptyBlock">
            <property name="option" value="TEXT" />
            <property name="tokens"
                value="LITERAL_TRY, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_SWITCH" />
        </module>
        <module name="NeedBraces" />
        <module name="LeftCurly" />
        <module name="RightCurly">
            <property name="id" value="RightCurlySame" />
            <property name="tokens"
                value="LITERAL_TRY, LITERAL_CATCH, LITERAL_FINALLY, LITERAL_IF, LITERAL_ELSE, LITERAL_DO" />
        </module>
        <module name="RightCurly">
            <property name="id" value="RightCurlyAlone" />
            <property name="option" value="alone" />
            <property name="tokens"
                value="CLASS_DEF, METHOD_DEF, CTOR_DEF, LITERAL_FOR, LITERAL_WHILE, STATIC_INIT, INSTANCE_INIT" />
        </module>
        <module name="WhitespaceAround">
            <property name="allowEmptyConstructors" value="true" />
            <property name="allowEmptyMethods" value="true" />
            <property name="allowEmptyTypes" value="true" />
            <property name="allowEmptyLoops" value="true" />
            <message key="ws.notFollowed"
                value="WhitespaceAround: ''{0}'' is not followed by whitespace. Empty blocks may only be represented as '{}' when not part of a multi-block statement (4.1.3)" />
            <message key="ws.notPreceded"
                value="WhitespaceAround: ''{0}'' is not preceded with whitespace." />
        </module>
        <module name="OneStatementPerLine" />
        <module name="MultipleVariableDeclarations" />
        <module name="ArrayTypeStyle" />
        <module name="MissingSwitchDefault" />
        <module name="FallThrough" />
        <module name="UpperEll" />
        <module name="ModifierOrder" />
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true" />
            <!-- Modified -->
            <property name="tokens" value="IMPORT, CLASS_DEF, INTERFACE_DEF, ENUM_DEF, STATIC_INIT,
             INSTANCE_INIT, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapDot" />
            <property name="tokens" value="DOT" />
            <property name="option" value="nl" />
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapComma" />
            <property name="tokens" value="COMMA" />
            <property name="option" value="EOL" />
        </module>
        <module name="SeparatorWrap">
            <!-- ELLIPSIS is EOL until https://github.com/google/styleguide/issues/258 -->
            <property name="id" value="SeparatorWrapEllipsis" />
            <property name="tokens" value="ELLIPSIS" />
            <property name="option" value="EOL" />
        </module>
        <module name="SeparatorWrap">
            <!-- ARRAY_DECLARATOR is EOL until https://github.com/google/styleguide/issues/259 -->
            <property name="id" value="SeparatorWrapArrayDeclarator" />
            <property name="tokens" value="ARRAY_DECLARATOR" />
            <property name="option" value="EOL" />
        </module>
        <module name="SeparatorWrap">
            <property name="id" value="SeparatorWrapMethodRef" />
            <property name="tokens" value="METHOD_REF" />
            <property name="option" value="nl" />
        </module>
        <module name="PackageName">
            <property name="format" value="^[a-z]+(\.[a-z][a-z0-9]*)*$" />
            <message key="name.invalidPattern"
                value="Package name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern"
                value="Type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="MemberName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9]*$" />
            <message key="name.invalidPattern"
                value="Member name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern"
                value="Parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="CatchParameterName">
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern"
                value="Catch parameter name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="LocalVariableName">
            <property name="tokens" value="VARIABLE_DEF" />
            <property name="format" value="^[a-z]([a-z0-9][a-zA-Z0-9]*)?$" />
            <message key="name.invalidPattern"
                value="Local variable name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Class type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Method type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="InterfaceTypeParameterName">
            <property name="format" value="(^[A-Z][0-9]?)$|([A-Z][a-zA-Z0-9]*[T]$)" />
            <message key="name.invalidPattern"
                value="Interface type name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="NoFinalizer" />
        <module name="GenericWhitespace">
            <message key="ws.followed"
                value="GenericWhitespace ''{0}'' is followed by whitespace." />
            <message key="ws.preceded"
                value="GenericWhitespace ''{0}'' is preceded with whitespace." />
            <message key="ws.illegalFollow"
                value="GenericWhitespace ''{0}'' should followed by whitespace." />
            <message key="ws.notPreceded"
                value="GenericWhitespace ''{0}'' is not preceded with whitespace." />
        </module>
        <module name="Indentation">
            <property name="basicOffset" value="2" />
            <property name="braceAdjustment" value="0" />
            <property name="caseIndent" value="2" />
            <property name="throwsIndent" value="4" />
            <property name="lineWrappingIndentation" value="4" />
            <property name="arrayInitIndent" value="2" />
        </module>
        <module name="AbbreviationAsWordInName">
            <property name="ignoreFinal" value="false" />
            <!-- Modified -->
            <property name="allowedAbbreviationLength" value="4" />
        </module>
        <module name="OverloadMethodsDeclarationOrder" />
        <module name="VariableDeclarationUsageDistance" />
        <module name="CustomImportOrder">
            <property name="sortImportsInGroupAlphabetically" value="true" />
            <property name="separateLineBetweenGroups" value="true" />
            <property name="customImportOrderRules" value="STATIC###THIRD_PARTY_PACKAGE" />
        </module>
        <module name="MethodParamPad" />
        <module name="NoWhitespaceBefore">
            <property name="tokens"
                value="COMMA, SEMI, POST_INC, POST_DEC, DOT, GENERIC_START, GENERIC_END, ELLIPSIS, METHOD_REF" />
            <property name="allowLineBreaks" value="true" />
        </module>
        <module name="ParenPad" />
        <module name="OperatorWrap">
            <property name="option" value="NL" />
            <property name="tokens"
                value="BAND, BOR, BSR, BXOR, DIV, EQUAL, GE, GT, LAND, LE, LITERAL_INSTANCEOF, LOR, LT, MINUS, MOD, NOT_EQUAL, PLUS, QUESTION, SL, SR, STAR, METHOD_REF " />
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationMostCases" />
            <property name="tokens"
                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF" />
        </module>
        <module name="AnnotationLocation">
            <property name="id" value="AnnotationLocationVariables" />
            <property name="tokens" value="VARIABLE_DEF" />
            <property name="allowSamelineMultipleAnnotations" value="false" />
        </module>
        <module name="NonEmptyAtclauseDescription" />
        <module name="JavadocTagContinuationIndentation" />
        <module name="SummaryJavadoc">
            <property name="forbiddenSummaryFragments"
                value="^@return the *|^This method returns |^A [{]@code [a-zA-Z0-9]+[}]( is a )" />
        </module>
        <module name="JavadocParagraph" />
        <module name="AtclauseOrder">
            <property name="tagOrder" value="@param, @return, @throws, @deprecated" />
            <property name="target"
                value="CLASS_DEF, INTERFACE_DEF, ENUM_DEF, METHOD_DEF, CTOR_DEF, VARIABLE_DEF" />
        </module>
        <!-- Modified -->
        <module name="JavadocMethod">
            <property name="allowMissingParamTags" value="false" />
            <property name="allowMissingThrowsTags" value="false" />
            <property name="allowMissingReturnTag" value="false" />
            <property name="minLineCount" value="2" />
            <property name="allowedAnnotations" value="Override, Test" />
            <property name="allowThrowsTagsForSubclasses" value="false" />
        </module>
        <module name="MethodName">
            <property name="format" value="^[a-z][a-z0-9][a-zA-Z0-9_]*$" />
            <message key="name.invalidPattern"
                value="Method name ''{0}'' must match pattern ''{1}''." />
        </module>
        <module name="SingleLineJavadoc">
            <property name="ignoreInlineTags" value="false" />
        </module>
        <module name="EmptyCatchBlock">
            <property name="exceptionVariableName" value="expected" />
        </module>
        <module name="CommentsIndentation" />

        <!-- Additional Checks -->
        <module name="AbstractClassName" />
        <module name="AnnotationOnSameLine" >
            <property name="tokens"
                value="INTERFACE_DEF, ENUM_DEF, CTOR_DEF, VARIABLE_DEF,
                 PARAMETER_DEF, TYPECAST, LITERAL_THROWS, IMPLEMENTS_CLAUSE,
                 TYPE_ARGUMENT, LITERAL_NEW, DOT, ANNOTATION_FIELD_DEF" />
        </module>
        <module name="AnnotationUseStyle" />
        <module name="AnonInnerLength" >
            <property name="max" value="40"/>
        </module>
        <module name="ArrayTrailingComma" />
        <module name="AvoidNestedBlocks" />
        <module name="AvoidStaticImport">
            <property name="excludes"
                value="com.isupatches.wisefy.TestUtils.*,
                        org.junit.Assert.*,
                        org.mockito.ArgumentMatchers.*,
                        org.mockito.Mockito.*"/>
        </module>
        <module name="BooleanExpressionComplexity" />
        <module name="ClassDataAbstractionCoupling">
            <property name="excludedPackages" value="com.isupatches.wisefy.callbacks"/>
            <property name="excludedClasses" value="MockNetworkUtil, MockWiseFyConnectionUtil,
                                                    MockWiseFyPrechecksUtil, MockWiseFyPrerequisitesUtil,
                                                    MockWiseFySearchUtil, NullCallbackUtil,
                                                    VerificationUtil"/>
        </module>
        <module name="ClassFanOutComplexity" >
            <property name="excludedPackages" value="com.isupatches.wisefy.callbacks"/>
        </module>
        <module name="ConstantName" />
        <module name="CovariantEquals" />
        <module name="CyclomaticComplexity" />
        <module name="DeclarationOrder" />
        <module name="DefaultComesLast" />
        <module name="DescendantToken" />
        <module name="DesignForExtension" />
        <module name="EmptyForInitializerPad" />
        <module name="EmptyForIteratorPad" />
        <module name="EmptyStatement" />
        <module name="EqualsAvoidNull" />
        <module name="EqualsHashCode" />
        <module name="ExecutableStatementCount" />
        <module name="ExplicitInitialization" />
        <module name="FinalClass" />
        <module name="FinalLocalVariable" />
        <module name="FinalParameters" />
        <module name="HiddenField">
            <property name="ignoreConstructorParameter" value="true" />
            <property name="ignoreSetter" value="true" />
            <property name="severity" value="warning" />
        </module>
        <module name="HideUtilityClassConstructor"/>
        <module name="IllegalCatch"/>
        <module name="IllegalImport"/>
        <module name="IllegalInstantiation"/>
        <module name="IllegalThrows"/>
        <module name="IllegalToken"/>
        <module name="IllegalType"/>
        <module name="ImportControl">
            <property name="severity" value="error"/>
            <property name="file" value="config/checkstyle/import-control.xml"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="JavadocType"/>
        <module name="JavaNCSS" />
        <module name="LocalFinalVariableName" />
        <module name="MagicNumber" />
        <module name="MethodCount">
            <property name="maxTotal" value="125"/>
        </module>
        <module name="MethodLength" />
        <module name="MissingCtor" />
        <module name="MissingDeprecated" />
        <module name="MissingOverride" />
        <module name="ModifiedControlVariable" />
        <module name="MultipleStringLiterals" />
        <module name="MutableException" />
        <module name="NestedForDepth" />
        <module name="NestedIfDepth">
            <property name="max" value="2" />
        </module>
        <module name="NestedTryDepth" />
        <module name="NoClone" />
        <module name="NoWhitespaceAfter" />
        <module name="NPathComplexity" />
        <module name="OuterTypeNumber" />
        <module name="PackageAnnotation" />
        <module name="PackageDeclaration" />
        <module name="ParameterAssignment" />
        <module name="ParameterNumber" />
        <module name="RedundantImport" />
        <module name="RedundantModifier" />
        <module name="Regexp" />
        <module name="RegexpSinglelineJava" />
        <module name="RequireThis" />
        <module name="ReturnCount">
            <property name="max" value="2"/>
            <property name="maxForVoid" value="2"/>
        </module>
        <module name="SimplifyBooleanExpression" />
        <module name="SimplifyBooleanReturn" />
        <module name="SingleSpaceSeparator" />
        <module name="StaticVariableName" />
        <module name="StringLiteralEquality" />
        <module name="SuperClone" />
        <module name="SuperFinalize" />
        <module name="SuppressWarnings" />
        <module name="ThrowsCount" />
        <module name="TodoComment" />
        <module name="TrailingComment" />
        <module name="TypecastParenPad" />
        <module name="UncommentedMain" />
        <module name="UnnecessaryParentheses" />
        <module name="UnusedImports" />
        <module name="UpperEll" />
        <module name="VisibilityModifier" />
        <module name="WriteTag" />

        <!-- DISABLED CHECKS -->
        <!--<module name="AvoidInlineConditionals" /> Rationale: Why wouldn't you want ternaries? -->
        <!-- <module name="ImportOrder" /> Rationale: using CustomImportOrder -->
        <!-- <module name="JavadocVariable" /> Rationale: Too much to maintain, not enough value add -->

        <!-- Checks listed on http://checkstyle.sourceforge.net/checks.html but couldn't get to work -->
        <!--<module name="Header" />-->
        <!--<module name="JavadocPackage"/>-->
        <!--<module name="RegexpHeader" />-->
        <!--<module name="RegexpMultiline" />-->
        <!--<module name="RegexpOnFilename" />-->
        <!--<module name="UniqueProperties" />-->
        <!--<module name="WhitespaceBefore" />-->
    </module>
</module>