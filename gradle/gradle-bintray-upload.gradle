// Source: https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle

apply plugin: 'com.jfrog.bintray'

version = VERSION_NAME

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        outputs.upToDateWhen { false }
        getArchiveClassifier().set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc, dependsOn: dokka) {
        outputs.upToDateWhen { false }
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        outputs.upToDateWhen { false }
        getArchiveClassifier().set('sources')
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    outputs.upToDateWhen { false }
    getArchiveClassifier().set('javadoc')
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
final Properties properties = new Properties()
if (project.rootProject.file('local.properties').exists()) {
    properties.load(project.rootProject.file('local.properties').newDataInputStream())
}

bintray {
    key = properties.getProperty("bintray.apikey")
    user = properties.getProperty("bintray.user")
    final def gpgPassphrase = properties.getProperty("bintray.gpg_passphrase")

    println("user: " + user)
    println("key: " + key)
    println("gpg_passphrase: " + gpgPassphrase)

    configurations = ['archives']

    pkg {
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        desc = LIBRARY_DESCRIPTION
        websiteUrl = POM_URL
        vcsUrl = POM_SCM_URL
        issueTrackerUrl = POM_SCM_ISSUE_URL
        licenses = ALL_LICENSES
        labels = ['Wifi', 'WifiManager', 'ConnectivityManager', 'Android', 'isuPatches', 'Patches']
        publish = true
        publicDownloadNumbers = true
        version {
            desc = LIBRARY_DESCRIPTION
            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                passphrase = gpgPassphrase
                // Optional. The passphrase for GPG signing'
            }
        }
    }
}