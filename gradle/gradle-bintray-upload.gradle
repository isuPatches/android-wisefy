// Source: https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle

apply plugin: 'com.jfrog.bintray'

version = VERSION_NAME

if (project.hasProperty("android")) { // Android libraries
    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    task javadoc(type: Javadoc) {
        source = android.sourceSets.main.java.srcDirs
        destinationDir = file("../javadoc/")
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }
} else { // Java libraries
    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

// Bintray
Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")

    println("user: " + user)
    println("key: " + key)


    configurations = ['archives']
    pkg {
        repo = BINTRAY_REPO
        name = BINTRAY_NAME
        desc = LIBRARY_DESCRIPTION
        websiteUrl = POM_URL
        vcsUrl = POM_SCM_URL
        issueTrackerUrl = POM_SCM_ISSUE_URL
        licenses = ALL_LICENSES
        labels = ['Wifi', 'WifiManager', 'ConnectivityManager', 'Android', 'isuPatches', 'Patches']
        publish = true
        publicDownloadNumbers = true
        version {
            desc = LIBRARY_DESCRIPTION
            gpg {
                sign = true // Determines whether to GPG sign the files. The default is false
                passphrase = properties.getProperty("bintray.gpg.password")
                // Optional. The passphrase for GPG signing'
            }
        }
    }
}